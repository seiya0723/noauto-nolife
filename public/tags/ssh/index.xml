<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ssh on 自動化無しに生活無し</title>
    <link>https://noauto-nolife.com/tags/ssh/</link>
    <description>Recent content in Ssh on 自動化無しに生活無し</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sat, 10 Sep 2022 20:48:19 +0900</lastBuildDate>
    
	<atom:link href="https://noauto-nolife.com/tags/ssh/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>FFmpegを使ってUbuntuサーバーにUSBで接続されたウェブカメラで映像を録画する</title>
      <link>https://noauto-nolife.com/post/ffmpeg-ubuntu-server-webcamera/</link>
      <pubDate>Sat, 10 Sep 2022 20:48:19 +0900</pubDate>
      
      <guid>https://noauto-nolife.com/post/ffmpeg-ubuntu-server-webcamera/</guid>
      <description>Ubuntu 22.04 Serverでやった ハードはラズパイ3B+ インストール FFmpegとv4l2-utilsをインストール sudo apt install ffmpeg v4l-utils デバイスを特定する v4l2-ctl --list-devices こんなふうに表示される(一部省略) BUFFALO BSWHD06M USB Camera : (usb-3f980000.usb-1.4): /dev/video0 /dev/video1 /dev/media3 対応しているフォーマットと解像度を特定する ffmpeg -f v4l2 -list_formats all -i /dev/video0 こんなふうに表示される(一部省略) [video4linux2,v4l2 @ 0xaaaad7c25420] Raw : yuyv422 : YUYV 4:2:2 : 1280x720 800x600 640x480 640x360 352x288 320x240 176x144 160x120 [video4linux2,v4l2 @ 0xaaaad7c25420] Compressed: mjpeg : Motion-JPEG : 1280x960 1280x720 800x600 640x480 640x360 352x288 320x240 176x144 160x120 映像を録画する ffmpeg -f v4l2 -framerate 30 -video_size 352x288 -i /dev/video0 output.mkv 後はこの映像をs</description>
    </item>
    
    <item>
      <title>リモートサーバーのデータを自動的にバックアップする方法論【scp&#43;crontab】</title>
      <link>https://noauto-nolife.com/post/shellscript-auto-backup/</link>
      <pubDate>Sun, 19 Sep 2021 18:12:35 +0900</pubDate>
      
      <guid>https://noauto-nolife.com/post/shellscript-auto-backup/</guid>
      <description>手順 crontabを使って、一定時間おきにリモートサーバーがバックアップを取る crontabを使って、一定時間おきに任意の端末がscpでリモートサーバーのバックアップファイルをDL crontabを使って、一定時間おきにリモートサーバーがバックアップしたデータを削除 方法 例えば、Djangoであればこうなる。 リモートサーバーの/etc/crontabに以下の設定を施す。 00 * * * * ubuntu cd ~/Document/django/ &amp;amp;&amp;amp; python3 manage.py dumpdata [任意の</description>
    </item>
    
    <item>
      <title>サーバー版Ubuntu 20.04のインストールから設定、SSHログインまで【固定IPアドレス、タイムゾーン、bashrcなど】</title>
      <link>https://noauto-nolife.com/post/startup-ubuntu2004-server/</link>
      <pubDate>Sat, 21 Aug 2021 17:39:30 +0900</pubDate>
      
      <guid>https://noauto-nolife.com/post/startup-ubuntu2004-server/</guid>
      <description>デスクトップ版のUbuntuとサーバー版のUbuntuは完全に別物である。 デスクトップ版はGUIでラクラク固定IPアドレス設定できたり、作業しながらブラウザで検索できる一方で、サーバー版のUbuntuはただ無機質なターミナルが全画面を覆っているだけである。 本記事ではインストールからIPアドレスの固定化、bashの設定やタイムゾーン設定、別端末からSSHでログインするまでを解説する。 対象読者は、既に</description>
    </item>
    
    <item>
      <title>UbuntuにSSHでリモートログインする方法【パスワード認証&#43;公開鍵認証&#43;scpコマンド】</title>
      <link>https://noauto-nolife.com/post/ubuntu-ssh/</link>
      <pubDate>Thu, 20 Sep 2018 18:22:19 +0900</pubDate>
      
      <guid>https://noauto-nolife.com/post/ubuntu-ssh/</guid>
      <description>SSH（Secure Shell）とはネットワークに接続されている端末にリモートログインをするための技術のことを言います。 SSHにより直接端末を操作しなくても遠隔地から端末にログインを行い、コマンド入力で簡単に操作できるようになります。それだけでなく、SSHを使用した際にはネットワークを流れる通信がすべて暗号化されるようになるのです。SSHでは暗号化された通信経路を使用するので、通信経路が暗号化され</description>
    </item>
    
  </channel>
</rss>