<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Git on 自動化無しに生活無し</title>
    <link>https://noauto-nolife.com/tags/git/</link>
    <description>Recent content in Git on 自動化無しに生活無し</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Thu, 16 Dec 2021 15:07:28 +0900</lastBuildDate>
    
	<atom:link href="https://noauto-nolife.com/tags/git/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>【GitHub】gitコマンドでリモートリポジトリへプッシュするためのトークンをジェネレートする</title>
      <link>https://noauto-nolife.com/post/github-token-generate/</link>
      <pubDate>Thu, 16 Dec 2021 15:07:28 +0900</pubDate>
      
      <guid>https://noauto-nolife.com/post/github-token-generate/</guid>
      <description>gitコマンドでGitHubにプッシュする時、アカウントのパスワードではプッシュすることはできない。前もってアカウント内に作っておいたトークンを入力する必要がある。 本記事ではその作り方を解説する。 トークン生成手順 下記リンク、もしくはSettingsからDeveloper settingsをクリック、Personal access tokensをクリックする。 https://github.com/settings/tokens Generate new tokenをクリック。パスワードの入力を要求される</description>
    </item>
    
    <item>
      <title>【Laravel】GitHubにプッシュする時.gitignoreに追加する必要のあるファイル、ディレクトリ</title>
      <link>https://noauto-nolife.com/post/laravel-gitignore-add/</link>
      <pubDate>Sat, 18 Sep 2021 11:11:14 +0900</pubDate>
      
      <guid>https://noauto-nolife.com/post/laravel-gitignore-add/</guid>
      <description>GitHubにプッシュする時、.gitignoreに追加する必要のあるファイル、ディレクトリをここにまとめる。 そんなものはどうでも良いから、もともとあったものと、追加したものを含めた完全版を見せてくれと思う人は、ページ末尾の結論へ。 対象に追加するべき、ファイル *.log *.sqlite .htaccess .logには開発用サーバーで動かしたログが残る。.sqliteは言わずもがなデータが残っている。 対象に追加するべき、ディレクトリ /storage /config /</description>
    </item>
    
    <item>
      <title>DjangoをDEBUG=FalseでHerokuにデプロイする方法</title>
      <link>https://noauto-nolife.com/post/django-deploy-heroku/</link>
      <pubDate>Mon, 26 Oct 2020 11:16:34 +0900</pubDate>
      
      <guid>https://noauto-nolife.com/post/django-deploy-heroku/</guid>
      <description>プロジェクトのディレクトリ構造は、『現場で使えるDjangoの教科書 基礎編』に準拠している。 クラウドにインストールさせるライブラリの定義(requirements.txt) pycharm等の統合開発環境を使用していて、仮想環境が動いている場合(既にターミナルの左側に(venv)等の表示がされている場合)、下記コマンドを実行して、requirements.txtを生成する。 pip freeze &amp;gt; requirements.txt もし、仮想環境を使</description>
    </item>
    
  </channel>
</rss>