<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sendgrid on 自動化無しに生活無し</title>
    <link>https://noauto-nolife.com/tags/sendgrid/</link>
    <description>Recent content in Sendgrid on 自動化無しに生活無し</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Thu, 13 Jan 2022 16:40:39 +0900</lastBuildDate>
    
	<atom:link href="https://noauto-nolife.com/tags/sendgrid/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>【Django】allauthを使用し、カスタムユーザーモデルを搭載させ、SendgridのAPIでメール認証をする簡易掲示板【保存版】</title>
      <link>https://noauto-nolife.com/post/django-allauth-custom-user-model-sendgrid/</link>
      <pubDate>Thu, 13 Jan 2022 16:40:39 +0900</pubDate>
      
      <guid>https://noauto-nolife.com/post/django-allauth-custom-user-model-sendgrid/</guid>
      <description>config まず、カスタムユーザーモデルと、DjangoallauthでSendgridを使用したメール認証の設定を施す。 config/settings.py &amp;quot;&amp;quot;&amp;quot; Django settings for config project. Generated by &#39;django-admin startproject&#39; using Django 3.1.2. For more information on this file, see https://docs.djangoproject.com/en/3.1/topics/settings/ For the full list of settings and their values, see https://docs.djangoproject.com/en/3.1/ref/settings/ &amp;quot;&amp;quot;&amp;quot; from pathlib import Path # Build paths inside the project like this: BASE_DIR / &#39;subdir&#39;. BASE_DIR = Path(__file__).resolve().parent.parent # Quick-start development settings - unsuitable for production # See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/ # SECURITY WARNING: keep the secret key used in production secret! SECRET_KEY = &#39;al#f(6(($8m%g#l4t2-0tvv1(&amp;amp;hbcd+(e8dt$!-m+ospxzv0gu&#39; # SECURITY WARNING: don&#39;t run with debug turned on in production! DEBUG = True ALLOWED_HOSTS = [] SITE_ID = 1 #django-allauthログイン時とログアウト時のリダイレクトURL LOGIN_REDIRECT_URL = &#39;/&#39; ACCOUNT_LOGOUT_REDIRECT_URL = &#39;/&#39; ####</description>
    </item>
    
    <item>
      <title>LaravelでSendgridを使ってメール送信【認証・通知に、ライブラリのインストールは不要】</title>
      <link>https://noauto-nolife.com/post/laravel-sendgrid/</link>
      <pubDate>Wed, 08 Dec 2021 16:42:22 +0900</pubDate>
      
      <guid>https://noauto-nolife.com/post/laravel-sendgrid/</guid>
      <description>特別なライブラリなどは必要ない。 流れ .envにてAPIキーなどを設定 make:mailコマンドでメールの雛形一式を作る メールのモデルを作る メールのテンプレートを作る 送信処理を実行する .envにてAPIキーなどを設定 まず、.envにてSendgridで手に入れたAPIキー等の情報を格納 MAIL_MAILER=smtp MAIL_HOST=smtp.sendgrid.net MAIL_PORT=587 MAIL_USERNAME=apikey MAIL_PASSWORD=[ここにSendgridで手に入れたAPIキーを記録する] MAIL_ENCRYPTION=tls MAIL_FROM_</description>
    </item>
    
    <item>
      <title>【Django&#43;Sendgrid】サーバー処理中(ビュー、独自コマンド)に通知メール(To,CC,BCC)を送信する</title>
      <link>https://noauto-nolife.com/post/django-sendgrid-processing/</link>
      <pubDate>Wed, 15 Sep 2021 07:48:47 +0900</pubDate>
      
      <guid>https://noauto-nolife.com/post/django-sendgrid-processing/</guid>
      <description>DjangoでSendgridを実装させる方法【APIキーと2段階認証を利用する】で解説したとおり、SendgridのAPIキーをsettings.pyに書けばallauthでメール送信ができる。 だが、サーバーの処理中(ビューやmanage.py系の独自コマンド)でメールを送信するにはsettings.pyのメール設定を読み込む必要がある。 ソースコード まず、前回と同様にsettings.pyにてA</description>
    </item>
    
    <item>
      <title>DjangoでSendgridを実装させる方法【APIキーと2段階認証を利用する】</title>
      <link>https://noauto-nolife.com/post/django-sendgrid/</link>
      <pubDate>Fri, 12 Feb 2021 17:48:49 +0900</pubDate>
      
      <guid>https://noauto-nolife.com/post/django-sendgrid/</guid>
      <description>Sendgridのパスワードを使用したメール送信が廃止され、APIを使用した2段階認証が強制されるため、ここに対策を記す。本記事はDjango(Python)を対象とした対策について解説する。 django-sendgrid-v5のインストール APIを使用するために、pipにてdjango-sendgrid-v5をインストールさせる。 pip install django-sendgrid-v5 settings.pyにて設定を施す settings.pyの</description>
    </item>
    
  </channel>
</rss>