<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Php on 自動化無しに生活無し</title>
    <link>https://noauto-nolife.com/tags/php/</link>
    <description>Recent content in Php on 自動化無しに生活無し</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Tue, 23 Nov 2021 12:17:33 +0900</lastBuildDate>
    
	<atom:link href="https://noauto-nolife.com/tags/php/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>VisualStudioCode(VScode)を使う前にやっておきたい設定と覚えておくと良い操作方法</title>
      <link>https://noauto-nolife.com/post/vscode-config/</link>
      <pubDate>Tue, 23 Nov 2021 12:17:33 +0900</pubDate>
      
      <guid>https://noauto-nolife.com/post/vscode-config/</guid>
      <description>比較的メジャーなVisualStudioCode(以下VScode)も、やはり初期状態のままでは使いづらい。 本記事では本格的にコードを書く前にやっておきたい設定を列挙する。 文字サイズを変更する まず文字サイズの変更。一番手っ取り早く文字を大きく表示させる方法として、VScode全体を拡大縮小することが有効。 VScodeのメニューバーから『表示』→『外観』→『拡大』もしくは『縮小』を選ぶ。もしくは、シ</description>
    </item>
    
    <item>
      <title>Laravelに必要なPHP構文【if,for,function,class,型変換、配列操作など】</title>
      <link>https://noauto-nolife.com/post/laravel-essential-php/</link>
      <pubDate>Sat, 13 Nov 2021 17:46:27 +0900</pubDate>
      
      <guid>https://noauto-nolife.com/post/laravel-essential-php/</guid>
      <description>Laravelはフレームワークである。すでにコードが書かれており、それを読みながら追記していく必要がある。 そのため、Laravelによく出るPHP構文を知っておくと開発がスムーズに進む。本記事ではLaravelに必要なPHP構文をまとめて解説する。 if 基本のif文。ブーリアン型の判定が主である。 &amp;lt;?php $flag = True; if ($flag){ echo &amp;quot;True!!&amp;quot;; } else{ echo &amp;quot;False!!&amp;quot;; } Laravel実践では、コントローラがクライアントから受け取った値が存在するかチ</description>
    </item>
    
    <item>
      <title>Laravelビギナーが30分で掲示板アプリを作る方法</title>
      <link>https://noauto-nolife.com/post/startup-laravel/</link>
      <pubDate>Tue, 26 Oct 2021 15:13:33 +0900</pubDate>
      
      <guid>https://noauto-nolife.com/post/startup-laravel/</guid>
      <description>laravelはDjangoと違って初っ端から大量のファイルやディレクトリが表示され、気後れしそうになるが、編集する部分さえ分かれば大したことはない見掛け倒し。 PHPを中心に扱う現場ではlaravelのスキルが求められるのでウェブ屋になるのであれば、是非とも習得しておきたい。 対象読者はlaravelを既にPCにインストール済み、Linux系コマンド習得済み、PHP及びHTML/CSS/JSの基本構</description>
    </item>
    
    <item>
      <title>【Request】Laravelでリクエストのバリデーションを行う【不適切なデータのチェックに】</title>
      <link>https://noauto-nolife.com/post/laravel-validate/</link>
      <pubDate>Wed, 03 Feb 2021 08:14:44 +0900</pubDate>
      
      <guid>https://noauto-nolife.com/post/laravel-validate/</guid>
      <description>コードはLaravelで検索とページネーションを両立させる【ANDとOR検索も】から流用している。現状では不適切な値(文字数オーバー、未入力等)をサーバーに送信すると、そのまま例外処理が発生する。バリデーションを実装させ、例外ではなく前のページにリダイレクトさせる。 対象はlaravel 7.x。 方法は主に2種類ある。コントローラー上にバリデーション処理を設置する方法、フォームリクエストを生成してバリ</description>
    </item>
    
    <item>
      <title>初心者でもlaravel 7.x を使い、45分でCRUD簡易掲示板を作る【Restful対応】</title>
      <link>https://noauto-nolife.com/post/laravel-crud-restful/</link>
      <pubDate>Mon, 01 Feb 2021 13:11:30 +0900</pubDate>
      
      <guid>https://noauto-nolife.com/post/laravel-crud-restful/</guid>
      <description>リハビリがてらlaravelでCRUDに対応した簡易掲示板を作る。この記事の手順に沿ってやれば、45分もあれば作れる。 本記事ではlaravel 7.X系を使用している。 流れ プロジェクトを作る DBはSQliteを読み込むように設定する Restful対応コントローラーを作る ルーティングの設定 モデル定義とマイグレーション実行 リクエストを作る ビューを作る コントローラーの修正 タイムゾーンの修正 プロジェクトを作</description>
    </item>
    
    <item>
      <title>Laravelのartisanコマンドのまとめ【開発用サーバー立ち上げ、コントローラやマイグレーションファイル等の作成、ルーティングの確認などに】</title>
      <link>https://noauto-nolife.com/post/laravel-artisan-command/</link>
      <pubDate>Mon, 01 Feb 2021 08:07:45 +0900</pubDate>
      
      <guid>https://noauto-nolife.com/post/laravel-artisan-command/</guid>
      <description>laravelのartisanコマンドをよく使うと思われる順にまとめる。 開発用サーバーを立ち上げる php artisan serve ホスト名とポート番号の指定もできる。 php artisan serve --host=[ホスト名] --port=[ポート番号] コントローラーを作る php artisan make:controller [コントローラー名] &amp;ndash;resourceをつけると、Restful化もできる php artisan make:controller [コントローラー名] --resource モデルを作る php artisan make:model [モデル名] &amp;ndash;migratio</description>
    </item>
    
  </channel>
</rss>